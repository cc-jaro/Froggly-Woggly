<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mknightstand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oenemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialise variables
event_inherited();
dir = 0;
spd = 3;
grav = 0.5;
hsp = 0;
vsp = 0;
vertigo = 1;


turning = 0;
aiming = 0;


run = 0;

distp = point_distance(x,y,ofrog.x,ofrog.y);
canshoot = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aiming = 0
var me = id;
var arrow = instance_create(x,y,oarrow);
with arrow
{
    hsp = 14 * me.image_xscale;
}
alarm[2] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turning = 0;
//hsp *= -1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//selects a speed at initialisation
if hsp = 0 &amp;&amp; aiming = 0 
    {
    hsp = choose(spd,-spd)
    }

//falls if can
vsp += grav;

//horizontal movement and collision
if place_meeting(x+hsp,y,osolid)
    {
    while(!place_meeting(x+sign(hsp),y,osolid))
        {
        x += sign(hsp);
        }
//turns around
    turning = 1;
    alarm[0] = 3;   
}

if turning = 0 &amp;&amp; aiming = 0
{
    x += hsp;
}

//vertical movement and collision
if place_meeting(x,y+vsp,osolid)
    {
    while(!place_meeting(x,y+sign(vsp),osolid))
        {
        y += sign(vsp);
        }
    vsp = 0;
    
    if (vertigo) &amp;&amp; !position_meeting(x+(abs(sprite_width)/2)*sign(hsp),y+(sprite_height/2)+8,osolid)
        {
        hsp *= -1
        //turns around
        turning = 1;
    alarm[0] = 3;
        
        }  
}
y += vsp   ;

//shooting code
if canshoot = 1 &amp;&amp; aiming = 0
    {
    if point_distance(x,y,x,ofrog.y) &lt; 180
        {
        if sign(x - ofrog.x) == -sign(hsp)
            {
            aiming = 1;
            alarm[1] = 30;
            canshoot = 0;
            }        
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
image_xscale = sign(hsp);



if hsp = 0
sprite_index = mknightstand;

if turning = 1
sprite_index = mknightturn;

if turning = 0 &amp;&amp; hsp !=0
{
    sprite_index = mknightwalk;
    image_speed = 0.3;
}

if aiming = 1 &amp;&amp; sprite_index != mknightbow
{
sprite_index = mknightbow;

    if image_index &lt; 4
        {
        image_speed = 0.16;
        }
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

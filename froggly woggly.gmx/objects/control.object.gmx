<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-300</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///display init
instance_activate_object(self);


switch (os_type)
    {
    case os_windows: android = 0; break;
    case os_android: android = 1; break;

    }
    
//android = 1;

script_execute(display_init);    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>zoom = 1;
times = 0;

//control scheme
ctrls = 1

//Aiming init 
aimdir = 0
vkesc = virtual_key_add(view_wview-(view_wview-2), view_hview-(view_hview-2), 54, 57, vk_escape)
//Virtual keys init
if android = 1
{
//vku = virtual_key_add(view_wview-180, view_hview-210, 175, 100, vk_up); 
//vkd = virtual_key_add(view_wview-180, view_hview-105, 175, 100, vk_down); 
vks = virtual_key_add(view_wview-(view_wview-(10)), view_hview-(210), (175), (200), vk_space); 
//vkt = virtual_key_add(view_wview-(view_wview-10), view_hview-105, 175, 100, vk_control); 

}

//Makes sure room speed is at 60. Shouldn't be needed just in case
if room_speed != 60
room_speed = 60;

steps = 1;
totalfps = 0;
avgfps = 0;
alarm[11] = room_speed/2;



scale = 1;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scoring memes
global.attempts = 0;
frogspawnx = ofrog.x;
frogspawny = ofrog.y;

global.totalscore = 0;

global.levelscore = 0;
basescore = 0;
time = 0;
counting = 0;
scoretick = 0;

valarm = 0;
cphase = 0;

countingscore = basescore;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>




alarm[11] = (room_speed/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rmenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///score table at end of level
time = round((ofrog.timer/60));
attempts = global.attempts

if ofrog.active = 1
{
time2 = (time*10)*-1;
attempts2 = ((attempts )*100)*-1;
levelscore2 = global.levelscore;
countingscore = basescore;
}

//score ratio
if ofrog.hasjumped = 1 &amp;&amp; ofrog.active = 0
{
global.totalscore = (basescore - (time*10) - (attempts)*100 + (global.levelscore))
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ctrl = keyboard_check(vk_control);

if mouse_wheel_up() &amp;&amp; ctrl = 1
    {
    zoom += 0.1;
    }

if mouse_wheel_down() &amp;&amp; ctrl = 1
    {
    zoom -= 0.1;
    }
    
if mouse_check_button(mb_right) = ctrl
    {
    zoom = 1
    }

zoom = 1 + (0.5 * android);

if android = 1
{
view_wview[0] = 1920;
view_hview[0] = 1080;
}

//android = keyboard_check(vk_alt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.levelscore += 20;
ofrog.timer += 50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init for Draw Settings
draw_set_color(c_black);
draw_set_font(fontmain);
draw_set_circle_precision(64); 

//Draws Credits Text
if android = 1
{
draw_text(150,99550,"Coding By Jaro #Music By Debussy");
}

if android != 1
{
draw_text(150,99550,"Click and drag anywhere to jump #Music by Debussy");
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialises Draw Settings for this step
draw_set_alpha(1);

if android = 0
    {
draw_set_font(fnt_blockfont);
draw_set_colour(c_black);
draw_rectangle(0,0,global.screenw,40,0)
draw_set_colour(c_white);

//virtual_key_show(vkesc)
draw_sprite_ext(sprite22,0,29,30,1.5,1.5,0,c_white,1);

if ofrog.active = 1
{

//charge bar top middle

draw_rectangle((global.screenw/2)-(300),(10),(global.screenw/2)+(300),(32),1)
draw_healthbar((global.screenw/2)-(300),(10),(global.screenw/2)+(300),(32),(100/110)*ofrog.jumpcharge,0,c_white,c_white,0,0,1)


//text top right
if global.leveltype = "mountain"

    {
    draw_set_halign(fa_left);
    draw_text(global.screenw-600,0,"Height:"+string(ofrog.height)+"m")
    draw_text(global.screenw-220,0,"Highest:"+string(ofrog.maxheight)+"m")
    }
    


//normal level text
if global.leveltype = 2
{
    draw_set_halign(fa_left);
    
    draw_text((global.screenw/10)*9,20,"points: "+string(global.levelscore))
    draw_text((global.screenw/10)*8,20,"Time: "+string(ofrog.secs))
    draw_text((global.screenw/10)*7,20,"Deaths: "+string(global.attempts))
    draw_text((global.screenw/10)*3,20,"power:")
    }
draw_set_colour(c_black);
}}
//android = 1
//android
//android
if android = 1
{
draw_set_font(fnt_blockfont);
draw_set_colour(c_black);
draw_rectangle(0,0,global.screenw,40*2,0)
draw_set_colour(c_white);

//virtual_key_show(vkesc)
draw_sprite_ext(sprite22,0,29,30,1.5,1.5,0,c_white,1);

if ofrog.active = 1
{

//charge bar top middle

draw_rectangle((global.screenw/2)-(300),(10),(global.screenw/2)+(300),(32*2),1)
draw_healthbar((global.screenw/2)-(300),(10),(global.screenw/2)+(300),(32)*2,(100/110)*ofrog.jumpcharge,0,c_white,c_white,0,0,1)


//text top right
if global.leveltype = "mountain"

    {
    draw_set_halign(fa_left);
    draw_text(global.screenw-600,0,"Height:"+string(ofrog.height)+"m")
    draw_text(global.screenw-220,0,"Highest:"+string(ofrog.maxheight)+"m")
    }
    


//normal level text
if global.leveltype = 2
{
    draw_set_halign(fa_left);
    
    draw_text((global.screenw/10)*9,20*2,"points: "+string(global.levelscore))
    draw_text((global.screenw/10)*8,20*2,"Time: "+string(ofrog.secs))
    draw_text((global.screenw/10)*7,20*2,"Deaths: "+string(global.attempts))
    draw_text((global.screenw/10)*3,20*2,"power:")
    }
draw_set_colour(c_black);
}



}
draw_set_alpha(1)

script_execute(scrdebug_text);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///score drawing
if !(global.leveltype) exit;

script_execute(scr_score)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ofrog.x = frogspawnx;
ofrog.y = frogspawny;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="79">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = room1
room_goto(rlevel1);

if room = rlevel1
room_goto(room1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music Toggle in game
//Toggles music on
if global.music = 0
{
global.music = 1;
ini_open("config.ini");
ini_write_real("configs", "music", 1); //Writes preference to ini for next time
ini_close(); 
    if !audio_is_playing(clair_de_lune) //Make sure audio is not playing, Just in case
    {
        audio_play_sound(clair_de_lune,0,1);
    }
exit //closes event before it sees that now music is on, it must turn off
}

//turns music off and saves it to the ini for next time
if global.music = 1
{
global.music = 0;
ini_open("config.ini");
ini_write_real("configs", "music", 0);
ini_close(); 
audio_stop_sound(clair_de_lune);
exit
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hides Android Virtual KEys
if debug != 1
{
debug = 1

    {
    vku = virtual_key_add(view_wview-180, view_hview-210, 175, 100, vk_up); 
    vkd = virtual_key_add(view_wview-180, view_hview-105, 175, 100, vk_down); 
    vks = virtual_key_add(view_wview-(view_wview-10), view_hview-210, 175, 100, vk_space); 
    //vkt = virtual_key_add(view_wview-(view_wview-10), view_hview-105, 175, 100, vk_control); 
    vkesc = virtual_key_add(view_wview-(view_wview-10), view_hview-(view_hview-10), 175, 100, vk_escape)
    }
}

if debug != 0
{
debug = 0
    {
    virtual_key_delete(vku)
    virtual_key_delete(vkd)
    virtual_key_delete(vks)
   // virtual_key_delete(vkt)
    virtual_key_delete(vkesc)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
